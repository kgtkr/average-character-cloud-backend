[tasks.add-migrate]
condition = {profiles = ["development"]}
script = """
set -eu

name=${1}
now=`date -u "+%Y%m%d%H%M%S"`
current_schema=`mktemp`
sqlx database reset -y
sqlx migrate run
PGSSLMODE=disable PGPASSWORD=$DATABASE_PASSWORD psqldef -U $DATABASE_USER -h $DATABASE_HOST -p $DATABASE_PORT --export $DATABASE_NAME > $current_schema
psqldef -f $current_schema -f ./schema.sql | grep -v _sqlx_migrations | tail -n +2 > migrations/${now}_${name}.up.sql
psqldef -f ./schema.sql -f $current_schema | sed '/_sqlx_migrations/,/);/d' | tail -n +2 > migrations/${now}_${name}.down.sql
rm $current_schema
sqlx migrate run
"""

[tasks.build-watch]
args = ["watch", "-x", "build"]
command = "cargo"

[tasks.sqlx-prepare]
args = ["sqlx", "prepare", "--", "--lib"]
command = "cargo"
